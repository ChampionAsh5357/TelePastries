plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
}

version = "${version}"
group = "com.mrbysco.telepastries" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TelePastries-${mc_version}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: "${mcp_channel}", version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                EXAMPLE {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                EXAMPLE {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        name = "TOP Maven"
        url = "https://maven.tterrag.com"
    }
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    compileOnly "mezz.jei:jei_1.12.2:${jei_version}"

    compileOnly "mcjty.theoneprobe:TheOneProbe-1.12:${top_version}"
    compileOnly "CraftTweaker2:CraftTweaker2-MC1120-Main:${crafttweaker_version}"

    compileOnly "curse.maven:hwyla-253449:2568751" //hwyla
    compileOnly "curse.maven:twilightforest-227639:3051450" //Twilight Forest
    compileOnly "curse.maven:lostcities-269024:2861574" //lost cities
    compileOnly "curse.maven:hunting-283235:2827888" //hunting dimension
//    implementation fg.deobf('bnbgaminglib:BNBGamingLib:1.12.2:2.17.6')
//    implementation fg.deobf('topography:Topography:1.12.2:1.5.1')
    //implementation fg.deobf('compact-machines:compactmachines3-1.12.2:3.0.17:b267')
}

fancyGradle {
    patches {
        resources
        coremods
        asm
    }
}

processResources {
    // required to allow file expansion later
    duplicatesStrategy = 'include'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", "${version}"
    inputs.property "mcversion", "${mc_version}"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':"${version}", 'mcversion':"${mc_version}"
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(reobfArtifact) {
                builtBy reobfArtifact
                artifactId = archivesBaseName
                classifier null
            }
        }
    }
    repositories {
        if (System.getenv().SAP_SECRET) {
            maven {
                url "https://maven.saps.dev/releases"
                credentials {
                    username = "mrbysco"
                    password = "${System.getenv().SAP_SECRET}"
                }
            }
        }
    }
}